


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             codigo,CODE,READONLY 
                                                            ; area de codigo
    2 00000000                 EXPORT           ordena
    3 00000000         ordena                               ; SBR que ordena un
                                                            a tabla de enteros 
                                                            de 32 bits. Paramet
                                                            ros:
    4 00000000         ; r0 = @ de comienzo de la tabla a ordenar (tabla por re
                       ferencia)
    5 00000000         ; r1 = Numero de elementos de la tabla (N por valor)  
    6 00000000         
    7 00000000 E52DE004        PUSH             {lr}        ; apilo @retorno
    8 00000004 E52DB004        PUSH             {r11}       ; apilo r11
    9 00000008 E1A0B00D        mov              fp, sp
   10 0000000C         
   11 0000000C         ; r0=@T r1 = N 
   12 0000000C E2411001        sub              r1,r1,#1    ; N-1
   13 00000010 E0801101        add              r1,r0,r1,LSL#2 ; r1=@T[N-1]
   14 00000014         
   15 00000014 E92D0003        PUSH             {r0,r1}
   16 00000018 EB000002        bl               qsort
   17 0000001C E28DD008        add              sp,sp,#8
   18 00000020         ;;POP {r0,r1}
   19 00000020 E49DB004        POP              {r11}
   20 00000024 E49DF004        POP              {pc}
   21 00000028         
   22 00000028         
   23 00000028         qsort                                ; SBR que ordena un
                                                            a tabla de enteros 
                                                            de 32 bits a través
                                                             del método quickso
                                                            rt. Parametros:
   24 00000028         ; iz = limite inferior de @ de comienzo de la tabla a or
                       denar (tabla por referencia)
   25 00000028         ; de = limite supeiror de @ de comienzo de la tabla a or
                       denar (tabla por referencia) 
   26 00000028         
   27 00000028 E52DE004        PUSH             {lr}        ; apilo @retorno
   28 0000002C E52DB004        PUSH             {r11}       ; apilo r11
   29 00000030 E1A0B00D        mov              fp,sp       ; creo fp
   30 00000034         
   31 00000034 E92D00FF        PUSH             {r0-r7}     ; apilo registros u
                                                            tilizados durante l
                                                            a SBR
   32 00000038         
   33 00000038 E59B0008        ldr              r0,[fp,#8]  ; r0= @T[iz]
   34 0000003C E59B200C        ldr              r2,[fp,#12] ; r2 = @T[N-1] = @T
                                                            [de]
   35 00000040 E1A01000        mov              r1,r0       ; r1= @T[i]
   36 00000044 E1A03002        mov              r3,r2       ; r2 = @T[de] = r3 
                                                            = @T[j]
   37 00000048         
   38 00000048 E3A07000        mov              r7,#0
   39 0000004C E0824000        add              r4,r2,r0    ; r3 = iz+de
   40 00000050 E08740A3        add              r4,r7,r3,LSR#1 ; r3 = (iz+de)/2
                                                            
   41 00000054 E5934000        ldr              r4,[r3]     ; r4 = T[(iz+de)/2]
                                                             = x
   42 00000058         



ARM Macro Assembler    Page 2 


   43 00000058         buc_do
   44 00000058 E5915000 
                       while1  ldr              r5,[r1]     ; r5 = T[i]
   45 0000005C E1540005        cmp              r4,r5       ; T[i]<x 
   46 00000060 DA000001        ble              while2
   47 00000064 E2811004        add              r1,r1,#4    ; i=i+1
   48 00000068 EAFFFFFA        b                while1
   49 0000006C         
   50 0000006C E5935000 
                       while2  ldr              r5,[r3]     ; r5 = T[j]
   51 00000070 E1550004        cmp              r5,r4       ; x<T[j]
   52 00000074 DA000001        ble              if1
   53 00000078 E2433004        sub              r3,r3,#4    ; j=j-1
   54 0000007C EAFFFFFA        b                while2
   55 00000080         
   56 00000080 E1510003 
                       if1     cmp              r1,r3
   57 00000084 CA000005        bgt              do_whi
   58 00000088         
   59 00000088 E5915000        ldr              r5,[r1]     ; r5 = T[i] = w
   60 0000008C E5936000        ldr              r6,[r3]     ; r6 = T[j]
   61 00000090 E5816000        str              r6,[r1]     ; T[i] = T[j]
   62 00000094 E5835000        str              r5,[r3]     ; T[j] = w
   63 00000098         
   64 00000098 E2811004        add              r1,r1,#4    ; i=i+1
   65 0000009C E2433004        sub              r3,r3,#4    ; j=j-1
   66 000000A0         
   67 000000A0 E1510003 
                       do_whi  cmp              r1,r3       ; i<=j
   68 000000A4 DAFFFFEB        ble              buc_do
   69 000000A8         
   70 000000A8 E1530000 
                       if2     cmp              r3,r0       ; iz<j
   71 000000AC DA000002        ble              if3
   72 000000B0 E92D0009        PUSH             {r0,r3}     ; almaceno los pará
                                                            metros para la recu
                                                            rsividad --> qsort(
                                                            iz,j)
   73 000000B4 EBFFFFDB        bl               qsort
   74 000000B8 E8BD0009        POP              {r0,r3}
   75 000000BC         
   76 000000BC E1520001 
                       if3     cmp              r2,r1       ; i<de
   77 000000C0 DA000002        ble              fin_sb
   78 000000C4 E92D0006        PUSH             {r1,r2}     ; almaceno los pará
                                                            metros para la recu
                                                            rsividad --> qsort(
                                                            i,de)
   79 000000C8 EBFFFFD6        bl               qsort
   80 000000CC E8BD0006        POP              {r1,r2}
   81 000000D0         
   82 000000D0 E8BD00FF 
                       fin_sb  POP              {r0-r7}     ;recupero los datos
                                                             originales de los 
                                                            registros del PP
   83 000000D4 E49DB004        POP              {r11}       ;destruyo fp
   84 000000D8 E49DF004        POP              {pc}        ;retorno
   85 000000DC         
   86 000000DC                 END



ARM Macro Assembler    Page 3 


Command Line: --debug --xref --apcs=interwork --depend=ordena.d -oordena.o -I"C
:\Program Files\ARM\INC" -I"C:\Program Files\ARM\INC\Philips" --predefine="__EV
AL SETA 1" --list=ordena.lst ordena.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

buc_do 00000058

Symbol: buc_do
   Definitions
      At line 43 in file ordena.s
   Uses
      At line 68 in file ordena.s
Comment: buc_do used once
codigo 00000000

Symbol: codigo
   Definitions
      At line 1 in file ordena.s
   Uses
      None
Comment: codigo unused
do_whi 000000A0

Symbol: do_whi
   Definitions
      At line 67 in file ordena.s
   Uses
      At line 57 in file ordena.s
Comment: do_whi used once
fin_sb 000000D0

Symbol: fin_sb
   Definitions
      At line 82 in file ordena.s
   Uses
      At line 77 in file ordena.s
Comment: fin_sb used once
if1 00000080

Symbol: if1
   Definitions
      At line 56 in file ordena.s
   Uses
      At line 52 in file ordena.s
Comment: if1 used once
if2 000000A8

Symbol: if2
   Definitions
      At line 70 in file ordena.s
   Uses
      None
Comment: if2 unused
if3 000000BC

Symbol: if3
   Definitions
      At line 76 in file ordena.s
   Uses
      At line 71 in file ordena.s
Comment: if3 used once
ordena 00000000

Symbol: ordena



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 3 in file ordena.s
   Uses
      At line 2 in file ordena.s
Comment: ordena used once
qsort 00000028

Symbol: qsort
   Definitions
      At line 23 in file ordena.s
   Uses
      At line 16 in file ordena.s
      At line 73 in file ordena.s
      At line 79 in file ordena.s

while1 00000058

Symbol: while1
   Definitions
      At line 44 in file ordena.s
   Uses
      At line 48 in file ordena.s
Comment: while1 used once
while2 0000006C

Symbol: while2
   Definitions
      At line 50 in file ordena.s
   Uses
      At line 46 in file ordena.s
      At line 54 in file ordena.s

11 symbols
335 symbols in table
