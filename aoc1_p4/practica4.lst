


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             datos,DATA,READWRITE 
                                                            ; area de datos
    2 00000000 0000000B 
                       N       EQU              11
    3 00000000 00000001 
              00000004 
              00000008 
              00000006 
              00000009 
              FFFFFFF9 
              00000003 
              00000005 
              00000002 
              00000000 
              00000006 T       DCD              1,4,8,6,9,-7,3,5,2,0,6
    4 0000002C 00000000 
                       stotal  DCD              0
    5 00000030         
    6 00000030                 AREA             codigo,CODE,READONLY 
                                                            ; area de codigo
    7 00000000                 ENTRY
    8 00000000         
    9 00000000 E59F0130        LDR              r0,=T       ; r0 = @T
   10 00000004 E3A0100B        mov              r1,#N       ; r1 = N  
   11 00000008         
   12 00000008         ; sub sp,sp,#4 ; espacio resultados
   13 00000008         ; PUSH {r0,r1} ; Apilo los parámetros para la subrutina
   14 00000008         
   15 00000008         ; bl suma   ; llamo a la subrutina
   16 00000008         
   17 00000008         ; add sp,sp,#8 ; libero los parámetros
   18 00000008         ; POP{r1}   ; recupero el resultado de la subrutina suma
                        en r1
   19 00000008         
   20 00000008         ; LDR r0,=stotal ; r0=@stotal
   21 00000008         ; str r1,[r0]  ; Mem[@stotal] = r1 = resultado
   22 00000008         
   23 00000008         ;;  PUSH {r0,r1} ; Apilo los parámetros para la subrutin
                       a
   24 00000008         ;; bl ordena
   25 00000008         ;; add sp,sp,#8 ; libero los parámetros
   26 00000008         
   27 00000008         
   28 00000008 EAFFFFFE 
                       fin     b                fin
   29 0000000C         
   30 0000000C         
   31 0000000C         suma                                 ;Inicio de la subru
                                                            tina que suma los e
                                                            lementos de una tab
                                                            la T de N numeros e
                                                            nteros de 32 bits
   32 0000000C         ;Guarda en la pila dos parámetros y un resultado:
   33 0000000C         ;Parámetros--> 1. Dirección de comienzo de la tabla (por
                        referencia)
   34 0000000C         ;         2. Número de elementos de la tabla (por valor)
                       
   35 0000000C         ;La subrutina devuelve como resultado la suma de los ele
                       mentos de la tabla.



ARM Macro Assembler    Page 2 


   36 0000000C         
   37 0000000C E52DE004        PUSH             {lr}        ;apilo @retorno
   38 00000010 E52DB004        PUSH             {r11}       ;apilo r11
   39 00000014 E1A0B00D        mov              fp,sp       ;creo fp
   40 00000018         
   41 00000018 E92D000F        PUSH             {r0-r3}     ;apilo registros ut
                                                            ilizados durante la
                                                             SBR
   42 0000001C E3A00000        mov              r0,#0       ;r0=0
   43 00000020 E59B2008        ldr              r2,[fp,#8]  ;r2=N
   44 00000024 E59B100C        ldr              r1,[fp,#12] ;r1=@T
   45 00000028         
   46 00000028 E4923004 
                       buc     ldr              r3,[r2],#4  ; r3=Mem[r2], r2=r2
                                                            +4
   47 0000002C E0800003        add              r0,r0,r3
   48 00000030 E2411001        sub              r1,r1,#1
   49 00000034 E3510000        cmp              r1,#0
   50 00000038 1AFFFFFA        bne              buc
   51 0000003C         
   52 0000003C E58B0010        str              r0,[fp,#16] ;guardo el resultad
                                                            o en su hueco reser
                                                            vado en la pila
   53 00000040 E8BD000F        POP              {r0-r3}     ;recupero los datos
                                                             originales de los 
                                                            registros del PP
   54 00000044 E49DB004        POP              {r11}       ;destruyo fp
   55 00000048 E49DF004        POP              {pc}        ;retorno
   56 0000004C         
   57 0000004C         
   58 0000004C         ordena                               ; SBR que ordena un
                                                            a tabla de enteros 
                                                            de 32 bits. Paramet
                                                            ros:
   59 0000004C         ; r0 = @ de comienzo de la tabla a ordenar (tabla por re
                       ferencia)
   60 0000004C         ; r1 = Numero de elementos de la tabla (N por valor)  
   61 0000004C         
   62 0000004C E52DE004        PUSH             {lr}        ; apilo @retorno
   63 00000050 E52DB004        PUSH             {r11}       ; apilo r11
   64 00000054 E1A0B00D        mov              fp,sp
   65 00000058         
   66 00000058 E92D0003        PUSH             {r0,r1}
   67 0000005C         
   68 0000005C E59B0008        ldr              r0,[fp,#8]  ; r0=@T
   69 00000060 E59B100C        ldr              r1,[fp,#12] ; r2 = N 
   70 00000064 E2411001        sub              r1,r1,#1    ; N-1
   71 00000068 E0801101        add              r1,r0,r1,LSL#2 ;r1=@T[N-1]
   72 0000006C         
   73 0000006C E92D0003        PUSH             {r0,r1}
   74 00000070 EB000003        bl               qsort
   75 00000074 E28DD008        add              sp,sp,#8
   76 00000078         
   77 00000078 E8BD0003        POP              {r0,r1}
   78 0000007C         
   79 0000007C E49DB004        POP              {r11}
   80 00000080 E49DF004        POP              {pc}
   81 00000084         
   82 00000084         



ARM Macro Assembler    Page 3 


   83 00000084         qsort                                ; SBR que ordena un
                                                            a tabla de enteros 
                                                            de 32 bits a través
                                                             del método quickso
                                                            rt. Parametros:
   84 00000084         ; iz = limite inferior de @ de comienzo de la tabla a or
                       denar (tabla por referencia)
   85 00000084         ; de = limite supeiror de @ de comienzo de la tabla a or
                       denar (tabla por referencia) 
   86 00000084         
   87 00000084 E52DE004        PUSH             {lr}        ; apilo @retorno
   88 00000088 E52DB004        PUSH             {r11}       ; apilo r11
   89 0000008C E1A0B00D        mov              fp,sp       ; creo fp
   90 00000090         
   91 00000090 E92D00FF        PUSH             {r0-r7}     ; apilo registros u
                                                            tilizados durante l
                                                            a SBR
   92 00000094         
   93 00000094 E59B0008        ldr              r0,[fp,#8]  ; r0= @T[iz]
   94 00000098 E59B200C        ldr              r2,[fp,#12] ; r2 = @T[N-1] = @T
                                                            [de]
   95 0000009C E1A01000        mov              r1,r0       ; r1= @T[i]
   96 000000A0 E1A03002        mov              r3,r2       ; r2 = @T[de] = r3 
                                                            = @T[j]
   97 000000A4         
   98 000000A4 E3A07000        mov              r7,#0
   99 000000A8 E0824000        add              r4,r2,r0    ; r3 = iz+de
  100 000000AC E08740A3        add              r4,r7,r3,LSR#1 ; r3 = (iz+de)/2
                                                            
  101 000000B0 E5934000        ldr              r4,[r3]     ; r4 = T[(iz+de)/2]
                                                             = x
  102 000000B4         
  103 000000B4         buc_do
  104 000000B4 E5915000 
                       while1  ldr              r5,[r1]     ; r5 = T[i]
  105 000000B8 E1540005        cmp              r4,r5       ; T[i]<x 
  106 000000BC DA000001        ble              while2
  107 000000C0 E2811004        add              r1,r1,#4    ; i=i+1
  108 000000C4 EAFFFFFA        b                while1
  109 000000C8         
  110 000000C8 E5935000 
                       while2  ldr              r5,[r3]     ; r5 = T[j]
  111 000000CC E1550004        cmp              r5,r4       ; x<T[j]
  112 000000D0 DA000001        ble              if1
  113 000000D4 E2433004        sub              r3,r3,#4    ; j=j-1
  114 000000D8 EAFFFFFA        b                while2
  115 000000DC         
  116 000000DC E1510003 
                       if1     cmp              r1,r3
  117 000000E0 8A000005        bhi              do_whi
  118 000000E4         
  119 000000E4 E5915000        ldr              r5,[r1]     ; r5 = T[i] = w
  120 000000E8 E5936000        ldr              r6,[r3]     ; r6 = T[j]
  121 000000EC E5816000        str              r6,[r1]     ; T[i] = T[j]
  122 000000F0 E5835000        str              r5,[r3]     ; T[j] = w
  123 000000F4         
  124 000000F4 E2811004        add              r1,r1,#4    ; i=i+1
  125 000000F8 E2433004        sub              r3,r3,#4    ; j=j-1
  126 000000FC         



ARM Macro Assembler    Page 4 


  127 000000FC E1510003 
                       do_whi  cmp              r1,r3       ; i<=j
  128 00000100 9AFFFFEB        bls              buc_do
  129 00000104         
  130 00000104 E1530000 
                       if2     cmp              r3,r0       ; iz<j
  131 00000108 9A000002        bls              if3
  132 0000010C E92D0009        PUSH             {r0,r3}     ; almaceno los pará
                                                            metros para la recu
                                                            rsividad --> qsort(
                                                            iz,j)
  133 00000110 EBFFFFDB        bl               qsort
  134 00000114 E8BD0009        POP              {r0,r3}
  135 00000118         
  136 00000118 E1520001 
                       if3     cmp              r2,r1       ; i<de
  137 0000011C 9A000002        bls              fin_sb
  138 00000120 E92D0006        PUSH             {r1,r2}     ; almaceno los pará
                                                            metros para la recu
                                                            rsividad --> qsort(
                                                            i,de)
  139 00000124 EBFFFFD6        bl               qsort
  140 00000128 E8BD0006        POP              {r1,r2}
  141 0000012C         
  142 0000012C E8BD00FF 
                       fin_sb  POP              {r0-r7}     ;recupero los datos
                                                             originales de los 
                                                            registros del PP
  143 00000130 E49DB004        POP              {r11}       ;destruyo fp
  144 00000134 E49DF004        POP              {pc}        ;retorno
  145 00000138         
  146 00000138                 END
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=practica4.d -opractica4.
o -I"C:\Program Files\ARM\INC" -I"C:\Program Files\ARM\INC\Philips" --predefine
="__EVAL SETA 1" --list=practica4.lst practica4.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

T 00000000

Symbol: T
   Definitions
      At line 3 in file practica4.s
   Uses
      At line 9 in file practica4.s
Comment: T used once
datos 00000000

Symbol: datos
   Definitions
      At line 1 in file practica4.s
   Uses
      None
Comment: datos unused
stotal 0000002C

Symbol: stotal
   Definitions
      At line 4 in file practica4.s
   Uses
      None
Comment: stotal unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

buc 00000028

Symbol: buc
   Definitions
      At line 46 in file practica4.s
   Uses
      At line 50 in file practica4.s
Comment: buc used once
buc_do 000000B4

Symbol: buc_do
   Definitions
      At line 103 in file practica4.s
   Uses
      At line 128 in file practica4.s
Comment: buc_do used once
codigo 00000000

Symbol: codigo
   Definitions
      At line 6 in file practica4.s
   Uses
      None
Comment: codigo unused
do_whi 000000FC

Symbol: do_whi
   Definitions
      At line 127 in file practica4.s
   Uses
      At line 117 in file practica4.s
Comment: do_whi used once
fin 00000008

Symbol: fin
   Definitions
      At line 28 in file practica4.s
   Uses
      At line 28 in file practica4.s
Comment: fin used once
fin_sb 0000012C

Symbol: fin_sb
   Definitions
      At line 142 in file practica4.s
   Uses
      At line 137 in file practica4.s
Comment: fin_sb used once
if1 000000DC

Symbol: if1
   Definitions
      At line 116 in file practica4.s
   Uses
      At line 112 in file practica4.s
Comment: if1 used once
if2 00000104

Symbol: if2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 130 in file practica4.s
   Uses
      None
Comment: if2 unused
if3 00000118

Symbol: if3
   Definitions
      At line 136 in file practica4.s
   Uses
      At line 131 in file practica4.s
Comment: if3 used once
ordena 0000004C

Symbol: ordena
   Definitions
      At line 58 in file practica4.s
   Uses
      None
Comment: ordena unused
qsort 00000084

Symbol: qsort
   Definitions
      At line 83 in file practica4.s
   Uses
      At line 74 in file practica4.s
      At line 133 in file practica4.s
      At line 139 in file practica4.s

suma 0000000C

Symbol: suma
   Definitions
      At line 31 in file practica4.s
   Uses
      None
Comment: suma unused
while1 000000B4

Symbol: while1
   Definitions
      At line 104 in file practica4.s
   Uses
      At line 108 in file practica4.s
Comment: while1 used once
while2 000000C8

Symbol: while2
   Definitions
      At line 110 in file practica4.s
   Uses
      At line 106 in file practica4.s
      At line 114 in file practica4.s

14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 0000000B

Symbol: N
   Definitions
      At line 2 in file practica4.s
   Uses
      At line 10 in file practica4.s
Comment: N used once
1 symbol
344 symbols in table
